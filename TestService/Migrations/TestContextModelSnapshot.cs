// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestService.Contexts;

#nullable disable

namespace TestService.Migrations
{
    [DbContext(typeof(TestContext))]
    partial class TestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("TestService.Models.BasicClass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("BasicClassId");

                    b.Property<DateTime>("Oprettet")
                        .HasColumnType("TEXT");

                    b.Property<int>("Refnr")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TestField")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("TestService.Models.BasicEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("BasicEntryId");

                    b.Property<Guid>("BasicClassId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueToLoad")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BasicClassId");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("TestService.Models.BasicEntry", b =>
                {
                    b.HasOne("TestService.Models.BasicClass", null)
                        .WithMany("BasicEntries")
                        .HasForeignKey("BasicClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TestService.Models.BasicClass", b =>
                {
                    b.Navigation("BasicEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
